{"version":3,"sources":["../sendtoTerminal.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,kCAQQ;AAAI;;AACR,+CACE;AAAA,eAAoB,mCAAR;AAAA;AAAA,kCAAZ;AAAqD;;AACvD;AAHI;AAAC,CAAD,EARR;;AAAA;;AAiBI;AAAA,SACM;AAA2B,wBAAtB,6CAAsB;AA6ED,iCA3E9B;AAAQ,+CAAR;AAAA;AAAA;;AA8E2B;AA9EJ,KA2EO,EA5ErB,gCA4EqB;AA7ExB,GADR;AAAO;;AAOP;AAAA,SAuEgC;AAAA,iCArE9B;AAAQ,6CAAR;AAAA;AAAA;;AAwE2B;AAxEN,KAqES,EAtEtB,yDAsEsB;AAAA,GAvEhC;AAAO;;AAMD;AAAS;AAEX,wCACQ,mBAEM;AAAA;AAAA;AAA2B,GAA3B,EAFN,KADR,GAKM;AAAQ;AACZ;AADS,GAAL,EALN;;AAOU,yBAAsB;AAAA;AAAoC,GAA1D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE,GAAtE;;AATR,UAUJ,kBAAmB,WAAnB,CAVI;AAAM;;AAaZ;AAAA;AAEG;AAAA;AAAA;AAAA;AAAyB,KAAzB;AAAyB,GAAzB,GADH,mEAAgE;AAAA;AAAA,GAAhE;AAC4B","file":"sendtoTerminal.js","sourceRoot":"/Users/fb/Dropbox/kata/vscode/vscode-sendto-terminal/release","sourcesContent":["namespace Fbehrens\nmodule Simplerepl =\n  open Fable.Core\n  open Fable.Import\n  open Fable.Import.vscode\n  open Ionide.VSCode.Helpers\n\n  let terminal = \n    let t = window.createTerminal \"sendto\"\n    if JS.isDefined workspace.rootPath then\n      t.sendText((sprintf \"cd %s\" workspace.rootPath),true)\n    t.sendText(\"fsharpi\",true)\n    t\n\n  let mutable _context : ExtensionContext option = None \n\n  let showQuickPick () = \n    promise {\n      let ra = [\"essen\";\"trinken\"] |>ResizeArray \n      let! r = vscode.window.showQuickPick( ra |> Case1)\n      printfn \"selected %s\" r\n    } \n  \n  let information () =\n    promise {\n      let! a= vscode.window.showInformationMessage(\"Hello2\", \"a\" ,\"b\")\n      printfn \"chosen %A\" a\n    }\n\n  let pasteSelection () = \n      let editor = window.activeTextEditor\n      let text = \n        if editor.selection.isEmpty then\n          match _context with\n          | None -> \"\"\n          | Some c -> c.workspaceState.get \"last\"\n        else\n          let range = Range(editor.selection.anchor.line, editor.selection.anchor.character, editor.selection.active.line, editor.selection.active.character)\n          editor.document.getText range\n      _context |> Option.iter (fun c -> c.workspaceState.update(\"last\",text) |> ignore )\n      terminal.sendText (text+\";;\"), true\n    \n  let activate (context : vscode.ExtensionContext) = \n    _context <- Some context\n    vscode.commands.registerCommand(\"sendtoTerminal.pasteSelection\",pasteSelection |> unbox )\n    |> context.subscriptions.Add \n\n  let deactivate () =\n      ()\n"]}